|music
clk_20mhz => clk_1mhz.CLK
clk_20mhz => clk_div[0].CLK
clk_20mhz => clk_div[1].CLK
clk_20mhz => clk_div[2].CLK
clk_20mhz => clk_div[3].CLK
clk_20mhz => clk_div[4].CLK
rst_n => rst_n.IN5
btn => btn.IN1
been << wave_gen:u_wave_gen.been
seg[0] << shuma:u_shuma.seg
seg[1] << shuma:u_shuma.seg
seg[2] << shuma:u_shuma.seg
seg[3] << shuma:u_shuma.seg
seg[4] << shuma:u_shuma.seg
seg[5] << shuma:u_shuma.seg
seg[6] << shuma:u_shuma.seg
led_flash << led_flash_reg.DB_MAX_OUTPUT_PORT_TYPE


|music|debounce:u_debounce
clk => debounce_cnt[0].CLK
clk => debounce_cnt[1].CLK
clk => debounce_cnt[2].CLK
clk => debounce_cnt[3].CLK
clk => debounce_cnt[4].CLK
clk => debounce_cnt[5].CLK
clk => debounce_cnt[6].CLK
clk => debounce_cnt[7].CLK
clk => debounce_cnt[8].CLK
clk => debounce_cnt[9].CLK
clk => debounce_cnt[10].CLK
clk => debounce_cnt[11].CLK
clk => debounce_cnt[12].CLK
clk => debounce_cnt[13].CLK
clk => debounce_cnt[14].CLK
clk => debounce_cnt[15].CLK
clk => debounce_cnt[16].CLK
clk => debounce_cnt[17].CLK
clk => debounce_cnt[18].CLK
clk => debounce_cnt[19].CLK
clk => btn_ff2.CLK
clk => btn_ff1.CLK
rst_n => debounce_cnt[0].ACLR
rst_n => debounce_cnt[1].ACLR
rst_n => debounce_cnt[2].ACLR
rst_n => debounce_cnt[3].ACLR
rst_n => debounce_cnt[4].ACLR
rst_n => debounce_cnt[5].ACLR
rst_n => debounce_cnt[6].ACLR
rst_n => debounce_cnt[7].ACLR
rst_n => debounce_cnt[8].ACLR
rst_n => debounce_cnt[9].ACLR
rst_n => debounce_cnt[10].ACLR
rst_n => debounce_cnt[11].ACLR
rst_n => debounce_cnt[12].ACLR
rst_n => debounce_cnt[13].ACLR
rst_n => debounce_cnt[14].ACLR
rst_n => debounce_cnt[15].ACLR
rst_n => debounce_cnt[16].ACLR
rst_n => debounce_cnt[17].ACLR
rst_n => debounce_cnt[18].ACLR
rst_n => debounce_cnt[19].ACLR
rst_n => btn_ff2.PRESET
rst_n => btn_ff1.PRESET
btn_in => btn_ff1.DATAIN
btn_pressed <= Equal1.DB_MAX_OUTPUT_PORT_TYPE


|music|speed_ctrl:u_speed_ctrl
clk => cnt[0]~reg0.CLK
clk => cnt[1]~reg0.CLK
clk => cnt[2]~reg0.CLK
clk => cnt[3]~reg0.CLK
clk => cnt[4]~reg0.CLK
clk => cnt[5]~reg0.CLK
clk => cnt[6]~reg0.CLK
clk => cnt[7]~reg0.CLK
clk => cnt[8]~reg0.CLK
clk => cnt[9]~reg0.CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => count[9].CLK
clk => count[10].CLK
clk => count[11].CLK
clk => count[12].CLK
clk => count[13].CLK
clk => count[14].CLK
clk => count[15].CLK
clk => count[16].CLK
clk => count[17].CLK
clk => count[18].CLK
clk => count[19].CLK
clk => count[20].CLK
clk => count[21].CLK
clk => count[22].CLK
clk => count[23].CLK
clk => count[24].CLK
clk => count[25].CLK
rst_n => count[0].ACLR
rst_n => count[1].ACLR
rst_n => count[2].ACLR
rst_n => count[3].ACLR
rst_n => count[4].ACLR
rst_n => count[5].ACLR
rst_n => count[6].ACLR
rst_n => count[7].ACLR
rst_n => count[8].ACLR
rst_n => count[9].ACLR
rst_n => count[10].ACLR
rst_n => count[11].ACLR
rst_n => count[12].ACLR
rst_n => count[13].ACLR
rst_n => count[14].ACLR
rst_n => count[15].ACLR
rst_n => count[16].ACLR
rst_n => count[17].ACLR
rst_n => count[18].ACLR
rst_n => count[19].ACLR
rst_n => count[20].ACLR
rst_n => count[21].ACLR
rst_n => count[22].ACLR
rst_n => count[23].ACLR
rst_n => count[24].ACLR
rst_n => count[25].ACLR
rst_n => cnt[0]~reg0.ACLR
rst_n => cnt[1]~reg0.ACLR
rst_n => cnt[2]~reg0.ACLR
rst_n => cnt[3]~reg0.ACLR
rst_n => cnt[4]~reg0.ACLR
rst_n => cnt[5]~reg0.ACLR
rst_n => cnt[6]~reg0.ACLR
rst_n => cnt[7]~reg0.ACLR
rst_n => cnt[8]~reg0.ACLR
rst_n => cnt[9]~reg0.ACLR
rst_cnt => cnt.OUTPUTSELECT
rst_cnt => cnt.OUTPUTSELECT
rst_cnt => cnt.OUTPUTSELECT
rst_cnt => cnt.OUTPUTSELECT
rst_cnt => cnt.OUTPUTSELECT
rst_cnt => cnt.OUTPUTSELECT
rst_cnt => cnt.OUTPUTSELECT
rst_cnt => cnt.OUTPUTSELECT
rst_cnt => cnt.OUTPUTSELECT
rst_cnt => cnt.OUTPUTSELECT
cnt[0] <= cnt[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
cnt[1] <= cnt[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
cnt[2] <= cnt[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
cnt[3] <= cnt[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
cnt[4] <= cnt[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
cnt[5] <= cnt[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
cnt[6] <= cnt[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
cnt[7] <= cnt[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
cnt[8] <= cnt[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
cnt[9] <= cnt[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|music|music_mem:u_music_mem
clk => music[0]~reg0.CLK
clk => music[1]~reg0.CLK
clk => music[2]~reg0.CLK
clk => music[3]~reg0.CLK
clk => music[4]~reg0.CLK
rst_n => music[0]~reg0.ACLR
rst_n => music[1]~reg0.ACLR
rst_n => music[2]~reg0.ACLR
rst_n => music[3]~reg0.ACLR
rst_n => music[4]~reg0.ACLR
cnt[0] => note_rom.RADDR
cnt[1] => note_rom.RADDR1
cnt[2] => note_rom.RADDR2
cnt[3] => note_rom.RADDR3
cnt[4] => note_rom.RADDR4
cnt[5] => note_rom.RADDR5
cnt[6] => note_rom.RADDR6
cnt[7] => note_rom.RADDR7
cnt[8] => note_rom.RADDR8
cnt[9] => note_rom.RADDR9
music[0] <= music[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
music[1] <= music[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
music[2] <= music[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
music[3] <= music[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
music[4] <= music[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|music|lev_ctl:u_lev_ctl
clk_1mhz => wave_cnt_max[0].CLK
clk_1mhz => wave_cnt_max[1].CLK
clk_1mhz => wave_cnt_max[2].CLK
clk_1mhz => wave_cnt_max[3].CLK
clk_1mhz => wave_cnt_max[4].CLK
clk_1mhz => wave_cnt_max[5].CLK
clk_1mhz => wave_cnt_max[6].CLK
clk_1mhz => wave_cnt_max[7].CLK
clk_1mhz => wave_cnt_max[8].CLK
clk_1mhz => wave_cnt_max[9].CLK
clk_1mhz => wave_cnt_max[10].CLK
rst_n => wave_cnt_max[0].ACLR
rst_n => wave_cnt_max[1].ACLR
rst_n => wave_cnt_max[2].ACLR
rst_n => wave_cnt_max[3].ACLR
rst_n => wave_cnt_max[4].ACLR
rst_n => wave_cnt_max[5].ACLR
rst_n => wave_cnt_max[6].ACLR
rst_n => wave_cnt_max[7].ACLR
rst_n => wave_cnt_max[8].ACLR
rst_n => wave_cnt_max[9].ACLR
rst_n => wave_cnt_max[10].ACLR
data[0] => Decoder0.IN4
data[1] => Decoder0.IN3
data[2] => Decoder0.IN2
data[3] => Decoder0.IN1
data[4] => Decoder0.IN0
div_max[0] <= wave_cnt_max[0].DB_MAX_OUTPUT_PORT_TYPE
div_max[1] <= wave_cnt_max[1].DB_MAX_OUTPUT_PORT_TYPE
div_max[2] <= wave_cnt_max[2].DB_MAX_OUTPUT_PORT_TYPE
div_max[3] <= wave_cnt_max[3].DB_MAX_OUTPUT_PORT_TYPE
div_max[4] <= wave_cnt_max[4].DB_MAX_OUTPUT_PORT_TYPE
div_max[5] <= wave_cnt_max[5].DB_MAX_OUTPUT_PORT_TYPE
div_max[6] <= wave_cnt_max[6].DB_MAX_OUTPUT_PORT_TYPE
div_max[7] <= wave_cnt_max[7].DB_MAX_OUTPUT_PORT_TYPE
div_max[8] <= wave_cnt_max[8].DB_MAX_OUTPUT_PORT_TYPE
div_max[9] <= wave_cnt_max[9].DB_MAX_OUTPUT_PORT_TYPE
div_max[10] <= wave_cnt_max[10].DB_MAX_OUTPUT_PORT_TYPE


|music|wave_gen:u_wave_gen
clk_1mhz => been~reg0.CLK
clk_1mhz => div_cnt[0].CLK
clk_1mhz => div_cnt[1].CLK
clk_1mhz => div_cnt[2].CLK
clk_1mhz => div_cnt[3].CLK
clk_1mhz => div_cnt[4].CLK
clk_1mhz => div_cnt[5].CLK
clk_1mhz => div_cnt[6].CLK
clk_1mhz => div_cnt[7].CLK
clk_1mhz => div_cnt[8].CLK
clk_1mhz => div_cnt[9].CLK
clk_1mhz => div_cnt[10].CLK
rst_n => div_cnt[0].ACLR
rst_n => div_cnt[1].ACLR
rst_n => div_cnt[2].ACLR
rst_n => div_cnt[3].ACLR
rst_n => div_cnt[4].ACLR
rst_n => div_cnt[5].ACLR
rst_n => div_cnt[6].ACLR
rst_n => div_cnt[7].ACLR
rst_n => div_cnt[8].ACLR
rst_n => div_cnt[9].ACLR
rst_n => div_cnt[10].ACLR
rst_n => been~reg0.ACLR
div_max[0] => Equal1.IN10
div_max[0] => Equal0.IN10
div_max[1] => Equal1.IN9
div_max[1] => Equal0.IN9
div_max[2] => Equal1.IN8
div_max[2] => Equal0.IN8
div_max[3] => Equal1.IN7
div_max[3] => Equal0.IN7
div_max[4] => Equal1.IN6
div_max[4] => Equal0.IN6
div_max[5] => Equal1.IN5
div_max[5] => Equal0.IN5
div_max[6] => Equal1.IN4
div_max[6] => Equal0.IN4
div_max[7] => Equal1.IN3
div_max[7] => Equal0.IN3
div_max[8] => Equal1.IN2
div_max[8] => Equal0.IN2
div_max[9] => Equal1.IN1
div_max[9] => Equal0.IN1
div_max[10] => Equal1.IN0
div_max[10] => Equal0.IN0
been <= been~reg0.DB_MAX_OUTPUT_PORT_TYPE


|music|shuma:u_shuma
state[0] => Decoder0.IN1
state[0] => seg[6].DATAIN
state[0] => seg[3].DATAIN
state[0] => seg[2].DATAIN
state[1] => Decoder0.IN0
state[1] => seg[4].DATAIN
state[1] => seg[0].DATAIN
seg[0] <= state[1].DB_MAX_OUTPUT_PORT_TYPE
seg[1] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
seg[2] <= state[0].DB_MAX_OUTPUT_PORT_TYPE
seg[3] <= state[0].DB_MAX_OUTPUT_PORT_TYPE
seg[4] <= state[1].DB_MAX_OUTPUT_PORT_TYPE
seg[5] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
seg[6] <= state[0].DB_MAX_OUTPUT_PORT_TYPE


